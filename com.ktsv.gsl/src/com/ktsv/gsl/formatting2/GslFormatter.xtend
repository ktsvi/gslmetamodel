/*
 * generated by Xtext 2.21.0
 */
package com.ktsv.gsl.formatting2

import com.google.inject.Inject
import com.ktsv.gsl.services.GslGrammarAccess
import gamamodel.Gamamodel
import gamamodel.GlobalBlock
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class GslFormatter extends AbstractFormatter2 {
	
	@Inject extension GslGrammarAccess

	def dispatch void format(Gamamodel gamamodel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		gamamodel.containsglobal.format
		for (specieBlock : gamamodel.containsspecie) {
			specieBlock.format
		}
		for (experimentBlock : gamamodel.containsexperiment) {
			experimentBlock.format
		}
	}

	def dispatch void format(GlobalBlock globalBlock, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (globalVariable : globalBlock.containsglobalvariable) {
			globalVariable.format
		}
		for (spatialEntity : globalBlock.hasspatialentity) {
			spatialEntity.format
		}
	}
	
	// TODO: implement for SpecieBlock, ExperimentBlock, Output, Display
}
