grammar com.ktsv.gsl.Gsl with org.eclipse.xtext.common.Terminals

import "http://GSL/1.0" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Gamamodel returns Gamamodel:
	'Gamamodel'
	'{'
		('description' description=EString)?
		('keywords' keywords=EString)?
		('author' author=EString)?
		('createdOn' createdOn=EDate)?
		'containsglobal' containsglobal+=GlobalBlock
		'containsspecie' '{' containsspecie+=SpecieBlock ( "," containsspecie+=SpecieBlock)* '}' 
		'containsexperiment' '{' containsexperiment+=ExperimentBlock ( "," containsexperiment+=ExperimentBlock)* '}' 
	'}';
Action returns Action:
	Action_Impl | ComplexeAction | Reflex | simpleAction;
EString returns ecore::EString:
	STRING | ID;
EDate returns ecore::EDate:
	'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;
GlobalBlock returns GlobalBlock:
	(init?='init')?
	'GlobalBlock'
	id=EInt
	'{'
		'containsglobalvariable' '{' containsglobalvariable+=GlobalVariable ( "," containsglobalvariable+=GlobalVariable)* '}' 
		'hasspatialentity' '{' hasspatialentity+=SpatialEntity ( "," hasspatialentity+=SpatialEntity)* '}' 
	'}';

SpecieBlock returns SpecieBlock:
	//(initfunction?='initfunction')?
	(aspectfunction?='aspectfunction')?
	'SpecieBlock'
	specieBlockName=EString
	'{'
		('aspectName' aspectName=EString)?
		('Color' Color=EString)?
		('skillofspecie' skillofspecie=EString)?
		'containsaction' '{' containsaction+=simpleAction ( "," containsaction+=simpleAction)* '}' 
		'haspropertie' '{' haspropertie+=Propertie ( "," haspropertie+=Propertie)* '}' 
	'}';

ExperimentBlock returns ExperimentBlock:
	'ExperimentBlock'
	experimentName=EString
	'{'
		('type' type=EString)?
		'hasparameter' '{' hasparameter+=Parameter ( "," hasparameter+=Parameter)* '}' 
		'hasoutput' '{' hasoutput+=Output ( "," hasoutput+=Output)* '}' 
	'}';

EInt returns ecore::EInt:
	'-'? INT;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

GlobalVariable returns GlobalVariable:
	{GlobalVariable}
	'GlobalVariable'
	gvarName=EString
	'{'
		('type' type=EString)?
		('initValue' initValue=EString)?
	'}';

SpatialEntity returns SpatialEntity:
	{SpatialEntity}
	'SpatialEntity'
	shapeName=EString
	'{'
		('shapePath' shapePath=EString)?
		('type' type=EString)?
	'}';

Action_Impl returns Action:
	{Action}
	'Action'
	'{'
		('actionName' actionName=EString)?
	'}';

Propertie returns Propertie:
	{Propertie}
	'Propertie'
	'{'
		('propertieName' propertieName=EString)?
		('type' type=EString)?
		('initValue' initValue=EString)?
	'}';

ComplexeAction returns ComplexeAction:
	{ComplexeAction}
	'ComplexeAction'
	id=EInt
	'{'
		('actionName' actionName=EString)?
	'}';

Reflex returns Reflex:
	{Reflex}
	'Reflex'
	id=EInt
	'{'
		('actionName' actionName=EString)?
		('condition' condition=EString)?
	'}';

simpleAction returns simpleAction:
	{simpleAction}
	'simpleAction'
	id=EInt
	'{'
		('actionName' actionName=EString)?
		('ReturnType' ReturnType=EString)?
	'}';

Parameter returns Parameter:
	{Parameter}
	'Parameter'
	parameterName=EString
	'{'
		('targetVariable' targetVariable=EString)?
	'}';

Output returns Output:
	'Output'
	id=EInt
	'{'
		('outputName' outputName=EString)?
		('framerate' framerate=EString)?
		'hasdisplays' '{' hasdisplays+=Display ( "," hasdisplays+=Display)* '}' 
		'hasexportfile' '{' hasexportfile+=Exportfile ( "," hasexportfile+=Exportfile)* '}' 
		'hasmonitor' '{' hasmonitor+=Monitor ( "," hasmonitor+=Monitor)* '}' 
	'}';

Display returns Display:
	'Display'
	displayName=EString
	'{'
		('displayType' displayType=EString)?
		'specieblock' '{' specieblock+=SpecieBlock ( "," specieblock+=SpecieBlock)* '}' 
	'}';

Exportfile returns Exportfile:
	{Exportfile}
	'Exportfile'
	'{'
		('fileName' fileName=EString)?
		('fileType' fileType=EString)?
	'}';

Monitor returns Monitor:
	{Monitor}
	'Monitor'
	label=EString
	'{'
		('targetVar' targetVar=EString)?
	'}';
