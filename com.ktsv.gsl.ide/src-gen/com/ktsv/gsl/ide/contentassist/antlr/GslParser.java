/*
 * generated by Xtext 2.21.0
 */
package com.ktsv.gsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import com.ktsv.gsl.ide.contentassist.antlr.internal.InternalGslParser;
import com.ktsv.gsl.services.GslGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class GslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(GslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, GslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getActionAccess().getAlternatives(), "rule__Action__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getGamamodelAccess().getGroup(), "rule__Gamamodel__Group__0");
			builder.put(grammarAccess.getGamamodelAccess().getGroup_2(), "rule__Gamamodel__Group_2__0");
			builder.put(grammarAccess.getGamamodelAccess().getGroup_3(), "rule__Gamamodel__Group_3__0");
			builder.put(grammarAccess.getGamamodelAccess().getGroup_4(), "rule__Gamamodel__Group_4__0");
			builder.put(grammarAccess.getGamamodelAccess().getGroup_5(), "rule__Gamamodel__Group_5__0");
			builder.put(grammarAccess.getGamamodelAccess().getGroup_11(), "rule__Gamamodel__Group_11__0");
			builder.put(grammarAccess.getGamamodelAccess().getGroup_16(), "rule__Gamamodel__Group_16__0");
			builder.put(grammarAccess.getGlobalBlockAccess().getGroup(), "rule__GlobalBlock__Group__0");
			builder.put(grammarAccess.getGlobalBlockAccess().getGroup_7(), "rule__GlobalBlock__Group_7__0");
			builder.put(grammarAccess.getGlobalBlockAccess().getGroup_12(), "rule__GlobalBlock__Group_12__0");
			builder.put(grammarAccess.getSpecieBlockAccess().getGroup(), "rule__SpecieBlock__Group__0");
			builder.put(grammarAccess.getSpecieBlockAccess().getGroup_4(), "rule__SpecieBlock__Group_4__0");
			builder.put(grammarAccess.getSpecieBlockAccess().getGroup_5(), "rule__SpecieBlock__Group_5__0");
			builder.put(grammarAccess.getSpecieBlockAccess().getGroup_6(), "rule__SpecieBlock__Group_6__0");
			builder.put(grammarAccess.getSpecieBlockAccess().getGroup_10(), "rule__SpecieBlock__Group_10__0");
			builder.put(grammarAccess.getSpecieBlockAccess().getGroup_15(), "rule__SpecieBlock__Group_15__0");
			builder.put(grammarAccess.getExperimentBlockAccess().getGroup(), "rule__ExperimentBlock__Group__0");
			builder.put(grammarAccess.getExperimentBlockAccess().getGroup_3(), "rule__ExperimentBlock__Group_3__0");
			builder.put(grammarAccess.getExperimentBlockAccess().getGroup_7(), "rule__ExperimentBlock__Group_7__0");
			builder.put(grammarAccess.getExperimentBlockAccess().getGroup_12(), "rule__ExperimentBlock__Group_12__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getGlobalVariableAccess().getGroup(), "rule__GlobalVariable__Group__0");
			builder.put(grammarAccess.getGlobalVariableAccess().getGroup_4(), "rule__GlobalVariable__Group_4__0");
			builder.put(grammarAccess.getGlobalVariableAccess().getGroup_5(), "rule__GlobalVariable__Group_5__0");
			builder.put(grammarAccess.getSpatialEntityAccess().getGroup(), "rule__SpatialEntity__Group__0");
			builder.put(grammarAccess.getSpatialEntityAccess().getGroup_4(), "rule__SpatialEntity__Group_4__0");
			builder.put(grammarAccess.getSpatialEntityAccess().getGroup_5(), "rule__SpatialEntity__Group_5__0");
			builder.put(grammarAccess.getAction_ImplAccess().getGroup(), "rule__Action_Impl__Group__0");
			builder.put(grammarAccess.getAction_ImplAccess().getGroup_3(), "rule__Action_Impl__Group_3__0");
			builder.put(grammarAccess.getPropertieAccess().getGroup(), "rule__Propertie__Group__0");
			builder.put(grammarAccess.getPropertieAccess().getGroup_3(), "rule__Propertie__Group_3__0");
			builder.put(grammarAccess.getPropertieAccess().getGroup_4(), "rule__Propertie__Group_4__0");
			builder.put(grammarAccess.getPropertieAccess().getGroup_5(), "rule__Propertie__Group_5__0");
			builder.put(grammarAccess.getComplexeActionAccess().getGroup(), "rule__ComplexeAction__Group__0");
			builder.put(grammarAccess.getComplexeActionAccess().getGroup_4(), "rule__ComplexeAction__Group_4__0");
			builder.put(grammarAccess.getReflexAccess().getGroup(), "rule__Reflex__Group__0");
			builder.put(grammarAccess.getReflexAccess().getGroup_4(), "rule__Reflex__Group_4__0");
			builder.put(grammarAccess.getReflexAccess().getGroup_5(), "rule__Reflex__Group_5__0");
			builder.put(grammarAccess.getSimpleActionAccess().getGroup(), "rule__SimpleAction__Group__0");
			builder.put(grammarAccess.getSimpleActionAccess().getGroup_4(), "rule__SimpleAction__Group_4__0");
			builder.put(grammarAccess.getSimpleActionAccess().getGroup_5(), "rule__SimpleAction__Group_5__0");
			builder.put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
			builder.put(grammarAccess.getParameterAccess().getGroup_4(), "rule__Parameter__Group_4__0");
			builder.put(grammarAccess.getOutputAccess().getGroup(), "rule__Output__Group__0");
			builder.put(grammarAccess.getOutputAccess().getGroup_3(), "rule__Output__Group_3__0");
			builder.put(grammarAccess.getOutputAccess().getGroup_4(), "rule__Output__Group_4__0");
			builder.put(grammarAccess.getOutputAccess().getGroup_8(), "rule__Output__Group_8__0");
			builder.put(grammarAccess.getOutputAccess().getGroup_13(), "rule__Output__Group_13__0");
			builder.put(grammarAccess.getOutputAccess().getGroup_18(), "rule__Output__Group_18__0");
			builder.put(grammarAccess.getDisplayAccess().getGroup(), "rule__Display__Group__0");
			builder.put(grammarAccess.getDisplayAccess().getGroup_3(), "rule__Display__Group_3__0");
			builder.put(grammarAccess.getDisplayAccess().getGroup_7(), "rule__Display__Group_7__0");
			builder.put(grammarAccess.getExportfileAccess().getGroup(), "rule__Exportfile__Group__0");
			builder.put(grammarAccess.getExportfileAccess().getGroup_3(), "rule__Exportfile__Group_3__0");
			builder.put(grammarAccess.getExportfileAccess().getGroup_4(), "rule__Exportfile__Group_4__0");
			builder.put(grammarAccess.getMonitorAccess().getGroup(), "rule__Monitor__Group__0");
			builder.put(grammarAccess.getMonitorAccess().getGroup_4(), "rule__Monitor__Group_4__0");
			builder.put(grammarAccess.getGamamodelAccess().getDescriptionAssignment_2_1(), "rule__Gamamodel__DescriptionAssignment_2_1");
			builder.put(grammarAccess.getGamamodelAccess().getKeywordsAssignment_3_1(), "rule__Gamamodel__KeywordsAssignment_3_1");
			builder.put(grammarAccess.getGamamodelAccess().getAuthorAssignment_4_1(), "rule__Gamamodel__AuthorAssignment_4_1");
			builder.put(grammarAccess.getGamamodelAccess().getCreatedOnAssignment_5_1(), "rule__Gamamodel__CreatedOnAssignment_5_1");
			builder.put(grammarAccess.getGamamodelAccess().getContainsglobalAssignment_7(), "rule__Gamamodel__ContainsglobalAssignment_7");
			builder.put(grammarAccess.getGamamodelAccess().getContainsspecieAssignment_10(), "rule__Gamamodel__ContainsspecieAssignment_10");
			builder.put(grammarAccess.getGamamodelAccess().getContainsspecieAssignment_11_1(), "rule__Gamamodel__ContainsspecieAssignment_11_1");
			builder.put(grammarAccess.getGamamodelAccess().getContainsexperimentAssignment_15(), "rule__Gamamodel__ContainsexperimentAssignment_15");
			builder.put(grammarAccess.getGamamodelAccess().getContainsexperimentAssignment_16_1(), "rule__Gamamodel__ContainsexperimentAssignment_16_1");
			builder.put(grammarAccess.getGlobalBlockAccess().getInitAssignment_0(), "rule__GlobalBlock__InitAssignment_0");
			builder.put(grammarAccess.getGlobalBlockAccess().getIdAssignment_2(), "rule__GlobalBlock__IdAssignment_2");
			builder.put(grammarAccess.getGlobalBlockAccess().getContainsglobalvariableAssignment_6(), "rule__GlobalBlock__ContainsglobalvariableAssignment_6");
			builder.put(grammarAccess.getGlobalBlockAccess().getContainsglobalvariableAssignment_7_1(), "rule__GlobalBlock__ContainsglobalvariableAssignment_7_1");
			builder.put(grammarAccess.getGlobalBlockAccess().getHasspatialentityAssignment_11(), "rule__GlobalBlock__HasspatialentityAssignment_11");
			builder.put(grammarAccess.getGlobalBlockAccess().getHasspatialentityAssignment_12_1(), "rule__GlobalBlock__HasspatialentityAssignment_12_1");
			builder.put(grammarAccess.getSpecieBlockAccess().getAspectfunctionAssignment_0(), "rule__SpecieBlock__AspectfunctionAssignment_0");
			builder.put(grammarAccess.getSpecieBlockAccess().getSpecieBlockNameAssignment_2(), "rule__SpecieBlock__SpecieBlockNameAssignment_2");
			builder.put(grammarAccess.getSpecieBlockAccess().getAspectNameAssignment_4_1(), "rule__SpecieBlock__AspectNameAssignment_4_1");
			builder.put(grammarAccess.getSpecieBlockAccess().getColorAssignment_5_1(), "rule__SpecieBlock__ColorAssignment_5_1");
			builder.put(grammarAccess.getSpecieBlockAccess().getSkillofspecieAssignment_6_1(), "rule__SpecieBlock__SkillofspecieAssignment_6_1");
			builder.put(grammarAccess.getSpecieBlockAccess().getContainsactionAssignment_9(), "rule__SpecieBlock__ContainsactionAssignment_9");
			builder.put(grammarAccess.getSpecieBlockAccess().getContainsactionAssignment_10_1(), "rule__SpecieBlock__ContainsactionAssignment_10_1");
			builder.put(grammarAccess.getSpecieBlockAccess().getHaspropertieAssignment_14(), "rule__SpecieBlock__HaspropertieAssignment_14");
			builder.put(grammarAccess.getSpecieBlockAccess().getHaspropertieAssignment_15_1(), "rule__SpecieBlock__HaspropertieAssignment_15_1");
			builder.put(grammarAccess.getExperimentBlockAccess().getExperimentNameAssignment_1(), "rule__ExperimentBlock__ExperimentNameAssignment_1");
			builder.put(grammarAccess.getExperimentBlockAccess().getTypeAssignment_3_1(), "rule__ExperimentBlock__TypeAssignment_3_1");
			builder.put(grammarAccess.getExperimentBlockAccess().getHasparameterAssignment_6(), "rule__ExperimentBlock__HasparameterAssignment_6");
			builder.put(grammarAccess.getExperimentBlockAccess().getHasparameterAssignment_7_1(), "rule__ExperimentBlock__HasparameterAssignment_7_1");
			builder.put(grammarAccess.getExperimentBlockAccess().getHasoutputAssignment_11(), "rule__ExperimentBlock__HasoutputAssignment_11");
			builder.put(grammarAccess.getExperimentBlockAccess().getHasoutputAssignment_12_1(), "rule__ExperimentBlock__HasoutputAssignment_12_1");
			builder.put(grammarAccess.getGlobalVariableAccess().getGvarNameAssignment_2(), "rule__GlobalVariable__GvarNameAssignment_2");
			builder.put(grammarAccess.getGlobalVariableAccess().getTypeAssignment_4_1(), "rule__GlobalVariable__TypeAssignment_4_1");
			builder.put(grammarAccess.getGlobalVariableAccess().getInitValueAssignment_5_1(), "rule__GlobalVariable__InitValueAssignment_5_1");
			builder.put(grammarAccess.getSpatialEntityAccess().getShapeNameAssignment_2(), "rule__SpatialEntity__ShapeNameAssignment_2");
			builder.put(grammarAccess.getSpatialEntityAccess().getShapePathAssignment_4_1(), "rule__SpatialEntity__ShapePathAssignment_4_1");
			builder.put(grammarAccess.getSpatialEntityAccess().getTypeAssignment_5_1(), "rule__SpatialEntity__TypeAssignment_5_1");
			builder.put(grammarAccess.getAction_ImplAccess().getActionNameAssignment_3_1(), "rule__Action_Impl__ActionNameAssignment_3_1");
			builder.put(grammarAccess.getPropertieAccess().getPropertieNameAssignment_3_1(), "rule__Propertie__PropertieNameAssignment_3_1");
			builder.put(grammarAccess.getPropertieAccess().getTypeAssignment_4_1(), "rule__Propertie__TypeAssignment_4_1");
			builder.put(grammarAccess.getPropertieAccess().getInitValueAssignment_5_1(), "rule__Propertie__InitValueAssignment_5_1");
			builder.put(grammarAccess.getComplexeActionAccess().getIdAssignment_2(), "rule__ComplexeAction__IdAssignment_2");
			builder.put(grammarAccess.getComplexeActionAccess().getActionNameAssignment_4_1(), "rule__ComplexeAction__ActionNameAssignment_4_1");
			builder.put(grammarAccess.getReflexAccess().getIdAssignment_2(), "rule__Reflex__IdAssignment_2");
			builder.put(grammarAccess.getReflexAccess().getActionNameAssignment_4_1(), "rule__Reflex__ActionNameAssignment_4_1");
			builder.put(grammarAccess.getReflexAccess().getConditionAssignment_5_1(), "rule__Reflex__ConditionAssignment_5_1");
			builder.put(grammarAccess.getSimpleActionAccess().getIdAssignment_2(), "rule__SimpleAction__IdAssignment_2");
			builder.put(grammarAccess.getSimpleActionAccess().getActionNameAssignment_4_1(), "rule__SimpleAction__ActionNameAssignment_4_1");
			builder.put(grammarAccess.getSimpleActionAccess().getReturnTypeAssignment_5_1(), "rule__SimpleAction__ReturnTypeAssignment_5_1");
			builder.put(grammarAccess.getParameterAccess().getParameterNameAssignment_2(), "rule__Parameter__ParameterNameAssignment_2");
			builder.put(grammarAccess.getParameterAccess().getTargetVariableAssignment_4_1(), "rule__Parameter__TargetVariableAssignment_4_1");
			builder.put(grammarAccess.getOutputAccess().getIdAssignment_1(), "rule__Output__IdAssignment_1");
			builder.put(grammarAccess.getOutputAccess().getOutputNameAssignment_3_1(), "rule__Output__OutputNameAssignment_3_1");
			builder.put(grammarAccess.getOutputAccess().getFramerateAssignment_4_1(), "rule__Output__FramerateAssignment_4_1");
			builder.put(grammarAccess.getOutputAccess().getHasdisplaysAssignment_7(), "rule__Output__HasdisplaysAssignment_7");
			builder.put(grammarAccess.getOutputAccess().getHasdisplaysAssignment_8_1(), "rule__Output__HasdisplaysAssignment_8_1");
			builder.put(grammarAccess.getOutputAccess().getHasexportfileAssignment_12(), "rule__Output__HasexportfileAssignment_12");
			builder.put(grammarAccess.getOutputAccess().getHasexportfileAssignment_13_1(), "rule__Output__HasexportfileAssignment_13_1");
			builder.put(grammarAccess.getOutputAccess().getHasmonitorAssignment_17(), "rule__Output__HasmonitorAssignment_17");
			builder.put(grammarAccess.getOutputAccess().getHasmonitorAssignment_18_1(), "rule__Output__HasmonitorAssignment_18_1");
			builder.put(grammarAccess.getDisplayAccess().getDisplayNameAssignment_1(), "rule__Display__DisplayNameAssignment_1");
			builder.put(grammarAccess.getDisplayAccess().getDisplayTypeAssignment_3_1(), "rule__Display__DisplayTypeAssignment_3_1");
			builder.put(grammarAccess.getDisplayAccess().getSpecieblockAssignment_6(), "rule__Display__SpecieblockAssignment_6");
			builder.put(grammarAccess.getDisplayAccess().getSpecieblockAssignment_7_1(), "rule__Display__SpecieblockAssignment_7_1");
			builder.put(grammarAccess.getExportfileAccess().getFileNameAssignment_3_1(), "rule__Exportfile__FileNameAssignment_3_1");
			builder.put(grammarAccess.getExportfileAccess().getFileTypeAssignment_4_1(), "rule__Exportfile__FileTypeAssignment_4_1");
			builder.put(grammarAccess.getMonitorAccess().getLabelAssignment_2(), "rule__Monitor__LabelAssignment_2");
			builder.put(grammarAccess.getMonitorAccess().getTargetVarAssignment_4_1(), "rule__Monitor__TargetVarAssignment_4_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private GslGrammarAccess grammarAccess;

	@Override
	protected InternalGslParser createParser() {
		InternalGslParser result = new InternalGslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public GslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(GslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
